/*
Deployment script for PkmnDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PkmnDatabase"
:setvar DefaultFilePrefix "PkmnDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[PokemonUsage]...';


GO
CREATE TABLE [dbo].[PokemonUsage] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [Generation]        SMALLINT        NOT NULL,
    [Format]            NVARCHAR (12)   NOT NULL,
    [PokemonId]         INT             NOT NULL,
    [RawCount]          INT             NOT NULL,
    [Abilities]         NVARCHAR (300)  NOT NULL,
    [Items]             NVARCHAR (800)  NOT NULL,
    [Spreads]           NVARCHAR (800)  NOT NULL,
    [Moves]             NVARCHAR (1950) NOT NULL,
    [Teammates]         NVARCHAR (800)  NULL,
    [ChecksAndCounters] NVARCHAR (800)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[PokemonUsage]...';


GO
ALTER TABLE [dbo].[PokemonUsage] WITH NOCHECK
    ADD FOREIGN KEY ([PokemonId]) REFERENCES [dbo].[Pokemon] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spPokemonUsage_Delete]...';


GO
CREATE PROCEDURE [dbo].[spPokemonUsage_Delete]
	@param1 int = 0,
	@param2 int
AS
	SELECT @param1, @param2
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[spPokemonUsage_Get]...';


GO
CREATE PROCEDURE [dbo].[spPokemonUsage_Get]
	@Id int
AS
BEGIN

	SELECT [Id], [Generation], [Format], [PokemonId], [RawCount], [Abilities], [Items], [Spreads], [Moves], [Teammates], [ChecksAndCounters] 
	FROM dbo.PokemonUsage
	WHERE Id = @Id;

END
GO
PRINT N'Creating Procedure [dbo].[spPokemonUsage_GetAll]...';


GO
CREATE PROCEDURE [dbo].[spPokemonUsage_GetAll]
AS
BEGIN

	SELECT [Id], [Generation], [Format], [PokemonId], [RawCount], [Abilities], [Items], [Spreads], [Moves], [Teammates], [ChecksAndCounters] 
	FROM dbo.PokemonUsage;

END
GO
PRINT N'Creating Procedure [dbo].[spPokemonUsage_GetAllGenAndFormat]...';


GO
CREATE PROCEDURE [dbo].[spPokemonUsage_GetAllGenAndFormat]
	@Generation SMALLINT,
	@Format nvarchar(12)
AS
BEGIN

	SELECT [Id], [Generation], [Format], [PokemonId], [RawCount], [Abilities], [Items], [Spreads], [Moves], [Teammates], [ChecksAndCounters]
	FROM dbo.PokemonUsage
	WHERE Generation=@Generation AND [Format]=@Format;

END
GO
PRINT N'Creating Procedure [dbo].[spPokemonUsage_Insert]...';


GO
CREATE PROCEDURE [dbo].[spPokemonUsage_Insert]
	@Generation smallint,
	@Format nvarchar(12),

	@PokemonId int,
	@RawCount int,
	@Abilities nvarchar(300),
	@Items nvarchar(800),
	@Spreads nvarchar(800),
	@Moves nvarchar(1950),
	@Teammates nvarchar(800),
	@ChecksAndCounters nvarchar(800)
AS
BEGIN

	INSERT INTO dbo.PokemonUsage(Generation, [Format], PokemonId, RawCount, Abilities, Items, Spreads, Moves, Teammates, ChecksAndCounters)
	VALUES(@Generation, @Format, @PokemonId, @Rawcount, @Abilities, @Items, @Spreads, @Moves, @Teammates, @ChecksAndCounters)

END
GO
PRINT N'Creating Procedure [dbo].[spPokemonUsage_Update]...';


GO
CREATE PROCEDURE [dbo].[spPokemonUsage_Update]
	@Id int,
	
	@Generation smallint,
	@Format nvarchar(12),

	@PokemonId int,
	@RawCount int,
	@Abilities nvarchar(300),
	@Items nvarchar(800),
	@Spreads nvarchar(800),
	@Moves nvarchar(1950),
	@Teammates nvarchar(800),
	@ChecksAndCounters nvarchar(800)
AS
BEGIN
	
	UPDATE dbo.PokemonUsage
	SET [Generation]=@Generation, [Format]=@Format, [PokemonId]=@PokemonId, [RawCount]=@RawCount, [Abilities]=@Abilities, [Items]=@Items, [Spreads]=@Spreads, [Moves]=@Moves, [Teammates]=@Teammates, [ChecksAndCounters]=@ChecksAndCounters
	WHERE Id=@Id;

END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.PokemonUsage'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
