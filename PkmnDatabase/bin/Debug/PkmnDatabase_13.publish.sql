/*
Deployment script for PkmnDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PkmnDatabase"
:setvar DefaultFilePrefix "PkmnDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[Pokemon]...';


GO
CREATE TABLE [dbo].[Pokemon] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [Name]          NVARCHAR (25)  NOT NULL,
    [Type1]         NCHAR (10)     NOT NULL,
    [Type2]         NCHAR (10)     NULL,
    [Ability1]      NVARCHAR (20)  NOT NULL,
    [Ability2]      NVARCHAR (20)  NULL,
    [HiddenAbility] NVARCHAR (20)  NULL,
    [Hp]            INT            NOT NULL,
    [Att]           INT            NOT NULL,
    [Def]           INT            NOT NULL,
    [SpAtt]         INT            NOT NULL,
    [SpDef]         INT            NOT NULL,
    [Spd]           INT            NOT NULL,
    [SpriteUrl]     NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[PokemonUsage]...';


GO
CREATE TABLE [dbo].[PokemonUsage] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [Generation]        SMALLINT        NOT NULL,
    [Format]            NVARCHAR (12)   NOT NULL,
    [PokemonId]         INT             NOT NULL,
    [RawCount]          INT             NOT NULL,
    [Abilities]         NVARCHAR (300)  NOT NULL,
    [Items]             NVARCHAR (800)  NOT NULL,
    [Spreads]           NVARCHAR (800)  NOT NULL,
    [Moves]             NVARCHAR (1950) NOT NULL,
    [Teammates]         NVARCHAR (800)  NULL,
    [ChecksAndCounters] NVARCHAR (800)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[PokemonUsage]...';


GO
ALTER TABLE [dbo].[PokemonUsage] WITH NOCHECK
    ADD FOREIGN KEY ([PokemonId]) REFERENCES [dbo].[Pokemon] ([Id]);


GO
PRINT N'Altering Procedure [dbo].[spPokemon_Get]...';


GO
ALTER PROCEDURE [dbo].[spPokemon_Get]
	@id int
AS
BEGIN

SELECT [Id], [Name], [Type1], [Type2], [Ability1], [Ability2], [HiddenAbility], [Hp], [Att], [Def], [SpAtt], [SpDef], [Spd], [SpriteUrl]
FROM dbo.Pokemon
WHERE Id = @id;

END
GO
PRINT N'Altering Procedure [dbo].[spPokemon_GetAll]...';


GO
ALTER PROCEDURE [dbo].[spPokemon_GetAll]
AS
BEGIN

SELECT [Id], [Name], [Type1], [Type2], [Ability1], [Ability2], [HiddenAbility], [Hp], [Att], [Def], [SpAtt], [SpDef], [Spd], [SpriteUrl]
FROM dbo.Pokemon;

END
GO
PRINT N'Altering Procedure [dbo].[spPokemon_GetByName]...';


GO
ALTER PROCEDURE [dbo].[spPokemon_GetByName]
	@Name NVARCHAR(25)
AS
BEGIN

	SELECT [Id], [Name], [Type1], [Type2], [Ability1], [Ability2], [HiddenAbility], [Hp], [Att], [Def], [SpAtt], [SpDef], [Spd], [SpriteUrl]
	FROM dbo.Pokemon
	WHERE [Name] = @Name;

END
GO
PRINT N'Altering Procedure [dbo].[spPokemon_Insert]...';


GO
ALTER PROCEDURE [dbo].[spPokemon_Insert]
	@Name NVARCHAR(25),
	@Type1 NVARCHAR(10),
	@Type2 NVARCHAR(10) NULL,
	@Ability1 NVARCHAR(20),
	@Ability2 NVARCHAR(20) NULL,
	@HiddenAbility NVARCHAR(20) NULL,
	@Hp INT,
	@Att INT,
	@Def INT,
	@SpAtt INT,
	@SpDef INT,
	@Spd INT,
	@SpriteUrl NVARCHAR(100) NULL
AS
BEGIN

INSERT INTO dbo.Pokemon([Name], Type1, Type2, Ability1, Ability2, HiddenAbility, Hp, Att, Def, SpAtt, SpDef, Spd, SpriteUrl)
VALUES (@Name, @Type1, @Type2, @Ability1, @Ability2, @HiddenAbility, @Hp, @Att, @Def, @SpAtt, @SpDef, @Spd, @SpriteUrl);

END
GO
PRINT N'Altering Procedure [dbo].[spPokemon_Update]...';


GO
ALTER PROCEDURE [dbo].[spPokemon_Update]
	@Id INT,
	@Name nvarchar(25),
	@Type1 nvarchar(10),
	@Type2 nvarchar(10),
	@Ability1 NVARCHAR(20),
	@Ability2 NVARCHAR(20) NULL,
	@HiddenAbility NVARCHAR(20) NULL,
	@Hp INT,
	@Att INT,
	@Def INT,
	@SpAtt INT,
	@SpDef INT, 
	@Spd INT,
	@SpriteUrl NVARCHAR(100) NULL
AS
BEGIN

UPDATE dbo.Pokemon
set [Name]=@Name, Type1=@Type1, Type2=@Type2, Ability1=@Ability1, Ability2=@Ability2, HiddenAbility=@HiddenAbility, Hp=@Hp, Att=@Att, Def=@Def, SpAtt=@SpAtt, SpDef=@SpDef, Spd=@Spd, SpriteUrl=@SpriteUrl
WHERE Id = @Id;

END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.PokemonUsage'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
